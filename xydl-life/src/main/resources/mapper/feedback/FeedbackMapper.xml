<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njit.xydl.life.feedback.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.njit.xydl.life.common.entity.Feedback">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="contact_way" jdbcType="VARCHAR" property="contactWay" />
    <result column="commitor" jdbcType="VARCHAR" property="commitor" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, contact_way, commitor, create_time, update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from feedback
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <insert id="insert" parameterType="com.njit.xydl.life.common.entity.Feedback">
    insert into feedback (id, content, contact_way, 
      commitor, create_time, update_time, 
      is_delete)
    values (#{id,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}, #{contact_way,jdbcType=VARCHAR}, 
      #{commitor,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, 
      #{is_delete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njit.xydl.life.common.entity.Feedback">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="contact_way != null">
        contact_way,
      </if>
      <if test="commitor != null">
        commitor,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="is_delete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="contact_way != null">
        #{contact_way,jdbcType=VARCHAR},
      </if>
      <if test="commitor != null">
        #{commitor,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_delete != null">
        #{is_delete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njit.xydl.life.common.entity.Feedback">
    update feedback
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="contact_way != null">
        contact_way = #{contact_way,jdbcType=VARCHAR},
      </if>
      <if test="commitor != null">
        commitor = #{commitor,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_delete != null">
        is_delete = #{is_delete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njit.xydl.life.common.entity.Feedback">
    update feedback
    set content = #{content,jdbcType=VARCHAR},
      contact_way = #{contact_way,jdbcType=VARCHAR},
      commitor = #{commitor,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      is_delete = #{is_delete,jdbcType=INTEGER}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>